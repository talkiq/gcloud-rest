version: 2.1

orbs:
  linter: thekevjames/linter@0.1

jobs:
  # TODO: Remove old_nox when everything is split into modules
  old_nox:
    docker:
      - image: thekevjames/nox:2019.8.20
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /key.json
    steps:
      - run: echo ${GOOGLE_SERVICE_PUBLIC} | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
      - checkout
      - run: nox

  nox:
    docker:
      - image: thekevjames/nox:2019.8.20
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /key.json
    parameters:
      folder:
        type: string
    steps:
      - run: echo ${GOOGLE_SERVICE_PUBLIC} | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
      - checkout
      - run: nox -f <<parameters.folder>>/noxfile.py

  pypi:
    docker:
      - image: python:3.7.4-slim
    steps:
      - run: pip install pyopenssl twine
      - checkout
      - deploy:
          name: upload to pypi
          command: |
            # TODO: Simplify when everything is split into modules
            # The check for the dash in the tag name won't be necessary
            if [[ $CIRCLE_TAG =~ "-" ]]
            then
              export PROJECT=$(echo "${CIRCLE_TAG}" | sed 's/-.*//')
              cd "${PROJECT}"
            fi
            python setup.py sdist bdist_wheel
            twine upload dist/*

  github:
    docker:
      - image: python:3.7.4-alpine
    steps:
      - run: apk add --no-cache curl git openssh-client
      - checkout
      - run:
          name: install github-release
          command: |
            curl -L https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 > github-release.tar.bz2
            tar xjf github-release.tar.bz2
            rm -f github-release.tar.bz2
      - deploy:
          name: create GitHub release
          command: |
            # TODO: Simplify when everything is split into modules
            # The check for the dash in the tag name won't be necessary
            if [[ $CIRCLE_TAG =~ "-" ]]
            then
              export PROJECT=$(echo "${CIRCLE_TAG}" | sed 's/-.*//')
              export PREV_RELEASE=$(git tag --sort=version:refname | grep ${PROJECT} | tail -n2 | head -n1)
              [ "${PREV_RELEASE}" = "${CIRCLE_TAG}" ] && export PREV_RELEASE=$(git rev-list --max-parents=0 HEAD)
              [ -z "${PREV_RELEASE}" ] && export PREV_RELEASE=$(git rev-list --max-parents=0 HEAD)

              git log ${PREV_RELEASE}..${CIRCLE_TAG} --pretty=format:'- %s' > release-description.md
              ./bin/linux/amd64/github-release release -t "${CIRCLE_TAG}"
              cat release-description.md | grep ${PROJECT} | ./bin/linux/amd64/github-release edit -t ${CIRCLE_TAG} -d -
            else
              export PREV_RELEASE=$(git tag --sort=version:refname | tail -n2 | head -n1)
              [ "${PREV_RELEASE}" = "${CIRCLE_TAG}" ] && export PREV_RELEASE=$(git rev-list --max-parents=0 HEAD)
              [ -z "${PREV_RELEASE}" ] && export PREV_RELEASE=$(git rev-list --max-parents=0 HEAD)

              git log ${PREV_RELEASE}..${CIRCLE_TAG} --pretty=format:'- %s' > release-description.md
              ./bin/linux/amd64/github-release release -t "${CIRCLE_TAG}"
              cat release-description.md | ./bin/linux/amd64/github-release edit -t ${CIRCLE_TAG} -d -
            fi

workflows:
  run-jobs:
    jobs:
      - linter/pre-commit:
          name: lint-py27
          config_file: .pre-commit-config.py27.yaml
          python_version: 2.7.14
          filters:
            tags:
              only: /.*/
      - linter/pre-commit:
          name: lint-py35
          python_version: 3.5.7
          filters:
            tags:
              only: /.*/
      - linter/pre-commit:
          name: lint-py36
          python_version: 3.6.8
          filters:
            tags:
              only: /.*/
      - linter/pre-commit:
          name: lint-py37
          python_version: 3.7.3
          filters:
            tags:
              only: /.*/

      - old_nox:
          name: test
          filters:
            tags:
              only: /.*/

      - nox:
          name: test-datastore
          folder: datastore
          filters:
            tags:
              only: /.*/

      - pypi:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              # TODO make project name mandatory when split into modules
              only: /([a-z]+-)?[0-9]+\.[0-9]+\.[0-9]+/
          requires:
            - lint-py27
            - lint-py35
            - lint-py36
            - lint-py37
            - test
            - test-datastore
      - github:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              # TODO make project name mandatory when split into modules
              only: /([a-z]+-)?[0-9]+\.[0-9]+\.[0-9]+/
          requires:
            - lint-py27
            - lint-py35
            - lint-py36
            - lint-py37
            - test
            - test-datastore
